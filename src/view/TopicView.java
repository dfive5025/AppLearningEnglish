/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.ListCtl;
import controller.LoginCtl;
import controller.SearchCtl;
import controller.TopicCtl;
import java.awt.Color;
import java.awt.Font;
import java.awt.Image;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import javax.swing.BorderFactory;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JToggleButton;
import javax.swing.table.DefaultTableModel;
import model.Word;

/**
 *
 * @author Admin
 */
public class TopicView extends javax.swing.JFrame { //sua mvc

    /**
     * Creates new form TopicView
     */
    TopicCtl tp = new TopicCtl();
    DefaultTableModel model;
    ArrayList<Word> topicList; //Word list by topic
    ArrayList<String> topicnameList; // topicnameList to setItem topicCombobox

    public TopicView() {
        initComponents();
        this.setSize(1210, 720);// Kích thước
        this.setVisible(true);// Hiện thị Jframe
        this.setTitle("Topic"); // Tiêu đề
        this.setLocationRelativeTo(null);// Hiển thị ở chính giữa màn hình
        ImageIcon icon = new ImageIcon(getClass().getResource("/image/logoapp.png"));
        Image image = icon.getImage();
        setIconImage(image);
        setBtn(); // Xóa viền các button 
        btnSearch.setMnemonic(KeyEvent.VK_ENTER); //ATL+ENTER
        model = (DefaultTableModel) topicTable.getModel();
//        model.setColumnIdentifiers(new Object[]{
//            "English", "Vietnamese"
//        });

        topicTable.getTableHeader().setFont(new Font("DejaVu Sans", Font.PLAIN, 14));
        topicTable.getTableHeader().setOpaque(false);
        topicTable.getTableHeader().setBackground(new Color(32, 136, 203));
        topicTable.getTableHeader().setForeground(new Color(255, 255, 255));
        showdatacombo();
    }

    private void showdatacombo() { //Tạo danh sách chủ đề ở comboBox chủ đề
        for (String str : tp.getTopicName()) {
            topicBox.addItem(str);
        }
    }

    public void SuccessAnnouunce(String str) {// Hiện thị thông báo
        Icon icon = new javax.swing.ImageIcon(getClass().getResource("/image/success.png"));
        JOptionPane.showMessageDialog(null, str, "Success", JOptionPane.INFORMATION_MESSAGE, icon);
    }

    public void ErrorAnnounce(String str) {// Hiện thị thông báo
        Icon icon = new javax.swing.ImageIcon(getClass().getResource("/image/error.png"));
        JOptionPane.showMessageDialog(null, str, "Error", JOptionPane.INFORMATION_MESSAGE, icon);
    }

    public void WarningtAnnounce(String str) {// Hiện thị thông báo
        Icon icon = new javax.swing.ImageIcon(getClass().getResource("/image/warning.png"));
        JOptionPane.showMessageDialog(null, str, "Warning", JOptionPane.WARNING_MESSAGE, icon);
    }

    private void showTable(String topicName) {//Hiển thị danh sách từ vựng theo chủ đề
        topicList = tp.getTopic(topicName);
        for (Word x : topicList) {
            model.addRow(new Object[]{
                x.getEn(), x.getVn()
            });
        }
    }

    public void setBtnNoBorder(JToggleButton button) // Xóa viền button
    {
        button.setOpaque(false);
        button.setFocusPainted(false);
        button.setBorderPainted(false);
        button.setContentAreaFilled(false);
        button.setBorder(BorderFactory.createEmptyBorder(0, 0, 0, 0)); // Especially important
    }

    public void setBtn()// Xóa viền button add, back and search
    {
        setBtnNoBorder(btnAdd);
        setBtnNoBorder(btnSearch);
        setBtnNoBorder(btnBack);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        topicTable = new javax.swing.JTable();
        topicBox = new javax.swing.JComboBox<>();
        txtTopicSearch = new javax.swing.JTextField();
        btnSearch = new javax.swing.JToggleButton();
        btnBack = new javax.swing.JToggleButton();
        btnAdd = new javax.swing.JToggleButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));

        topicTable.setAutoCreateRowSorter(true);
        topicTable.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        topicTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "English", "Vietnames"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        topicTable.setRowHeight(25);
        topicTable.setShowVerticalLines(false);
        topicTable.getTableHeader().setReorderingAllowed(false);
        topicTable.setUpdateSelectionOnSort(false);
        topicTable.setVerifyInputWhenFocusTarget(false);
        jScrollPane1.setViewportView(topicTable);
        if (topicTable.getColumnModel().getColumnCount() > 0) {
            topicTable.getColumnModel().getColumn(0).setResizable(false);
            topicTable.getColumnModel().getColumn(1).setResizable(false);
        }

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(120, 210, 980, 380);

        topicBox.setBackground(new java.awt.Color(240, 240, 240));
        topicBox.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        topicBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                topicBoxActionPerformed(evt);
            }
        });
        getContentPane().add(topicBox);
        topicBox.setBounds(670, 130, 240, 60);

        txtTopicSearch.setBackground(new java.awt.Color(240, 240, 240));
        txtTopicSearch.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        txtTopicSearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtTopicSearchMouseClicked(evt);
            }
        });
        txtTopicSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTopicSearchActionPerformed(evt);
            }
        });
        txtTopicSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTopicSearchKeyPressed(evt);
            }
        });
        getContentPane().add(txtTopicSearch);
        txtTopicSearch.setBounds(120, 130, 230, 60);

        btnSearch.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        btnSearch.setForeground(new java.awt.Color(255, 255, 255));
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });
        getContentPane().add(btnSearch);
        btnSearch.setBounds(350, 130, 140, 60);

        btnBack.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        btnBack.setForeground(new java.awt.Color(255, 255, 255));
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        getContentPane().add(btnBack);
        btnBack.setBounds(10, 10, 110, 110);

        btnAdd.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        btnAdd.setForeground(new java.awt.Color(255, 255, 255));
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        getContentPane().add(btnAdd);
        btnAdd.setBounds(540, 600, 150, 70);

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/TOPIC (1).png"))); // NOI18N
        jLabel1.setOpaque(true);
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 0, 1210, 680);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void topicBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_topicBoxActionPerformed
        txtTopicSearch.setText("");
        model.setRowCount(0);
        showTable(topicBox.getSelectedItem().toString());
    }//GEN-LAST:event_topicBoxActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // Bắt sự kiện nút Back
        this.dispose();
        new HomeView();
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // Bắt sự kiên nút Search
        if (txtTopicSearch.getText().isEmpty()) {
            WarningtAnnounce("Please enter topic's name");
        } else {
            String str = txtTopicSearch.getText();
            if (tp.checkTopicName(str)) {
                topicBox.setSelectedIndex(tp.getIndexTopicName(str));
                txtTopicSearch.setText(str);
            } else {
                WarningtAnnounce("No result");
                txtTopicSearch.setText("");
            }
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void txtTopicSearchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtTopicSearchMouseClicked
        txtTopicSearch.setText("");
    }//GEN-LAST:event_txtTopicSearchMouseClicked

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // Bắt sự kiện nút add
        int[] indexs = topicTable.getSelectedRows();// vi tri cac dong Word được chọn
        if (indexs.length == 0) {// Nếu chưa chọn
            WarningtAnnounce("Must have select at least a word");
        } else {

            int countSuccess = 0, countFalse = 0;
            for (int i = 0; i < indexs.length; i++) {
                String en = (String) topicTable.getValueAt(indexs[i], 0);
                if (new SearchCtl().checkWordExits(TopicCtl.idperson, en)) {
                    countFalse++;
                } else {
                    tp.addWordToPersonList(TopicCtl.idperson, tp.getIDword(en));
                    countSuccess++;
                }
            }
            if (countSuccess == 0 && countFalse == 1) // Mệt quá lười nghĩ thêm==> nghịch tí nên hơi nhiều trường hợp
            {
                WarningtAnnounce("The word is exits in your vocabulary");
            } else if (countSuccess == 0 && countFalse > 1) {
                WarningtAnnounce("Add " + countFalse + " word failed");
            } else if (countSuccess == 1 && countFalse == 0) {
                WarningtAnnounce("Add a word sucessfully");
            } else if (countSuccess > 1 && countFalse == 0) {
                WarningtAnnounce("Add " + countSuccess + " word sucessfully");
            } else if (countSuccess == 1 && countFalse == 1) {
                WarningtAnnounce("Add a word sucessfully and a word failed");
            } else if (countSuccess == 1 && countFalse > 1) {
                WarningtAnnounce("Add a word sucessfully, " + countFalse + " words failed");
            } else if (countSuccess > 1 && countFalse == 1) {
                WarningtAnnounce("Add " + countSuccess + " words sucessfully, a word failed");
            } else {
                WarningtAnnounce("Add " + countSuccess + " words sucessfully, " + countFalse + " words failed");
            }
        }


    }//GEN-LAST:event_btnAddActionPerformed

    private void txtTopicSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTopicSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTopicSearchActionPerformed

    private void txtTopicSearchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTopicSearchKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        if (txtTopicSearch.getText().isEmpty()) {
            WarningtAnnounce("Please enter topic's name");
        } else {
            String str = txtTopicSearch.getText();
            if (tp.checkTopicName(str)) {
                topicBox.setSelectedIndex(tp.getIndexTopicName(str));
                txtTopicSearch.setText(str);
            } else {
                WarningtAnnounce("No result");
                txtTopicSearch.setText("");
            }
        }
        }
    }//GEN-LAST:event_txtTopicSearchKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TopicView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TopicView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TopicView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TopicView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TopicView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton btnAdd;
    private javax.swing.JToggleButton btnBack;
    private javax.swing.JToggleButton btnSearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> topicBox;
    private javax.swing.JTable topicTable;
    private javax.swing.JTextField txtTopicSearch;
    // End of variables declaration//GEN-END:variables

}
