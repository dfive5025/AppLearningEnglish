/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import controller.AdminManagerCtl;
import controller.TopicCtl;
import java.awt.Color;
import java.awt.Font;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.BorderFactory;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JToggleButton;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;
import model.Topic;
import model.Word;
import static view.TopicManagerFrm.k;
import view.panel_editInfo.panel_editTopic;
import view.panel_editInfo.panel_editWord;

/**
 *
 * @author Admin
 */
public class WordManagerView extends javax.swing.JFrame {

    /**
     * Creates new form WordManagerView
     */
    TopicCtl tp = new TopicCtl();
    DefaultTableModel model;
    ArrayList<Word> topicList; //Word list by Topic
    ArrayList<String> topicnameList; // topicnameList to setItem topicCombobox
    AdminManagerCtl a = new AdminManagerCtl();

    public WordManagerView() {
        initComponents();
        ImageIcon icon = new ImageIcon(getClass().getResource("/image/logoapp.png"));
        Image image = icon.getImage();
        setIconImage(image);
        showdatacombo();
        tbl_wordInfo.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tbl_wordInfo.getTableHeader().setFont(new Font("DejaVu Sans", Font.PLAIN, 16));
        tbl_wordInfo.getTableHeader().setOpaque(false);
        tbl_wordInfo.getTableHeader().setBackground(new Color(32, 136, 203));
        tbl_wordInfo.getTableHeader().setForeground(new Color(255,255,255));

        
        setBtn();
        loadDataIntoJTable();
        this.setSize(1210, 720);// Kích thước
        this.setTitle("ADDWORD"); // Tiêu đề
        this.setLocationRelativeTo(null);// Hiển thị ở chính giữa màn hình
        this.setVisible(true);// Hiện thị Jframe
    }

    public void setBtnNoBorder(JButton button) {
        button.setOpaque(false);
        button.setFocusPainted(false);
        button.setBorderPainted(false);
        button.setContentAreaFilled(false);
        button.setBorder(BorderFactory.createEmptyBorder(0, 0, 0, 0)); // Especially important
    }
   public void setBtnNoBorder(JToggleButton button)
    {
        button.setOpaque(false);
        button.setFocusPainted(false);
        button.setBorderPainted(false);
        button.setContentAreaFilled(false);
        button.setBorder(BorderFactory.createEmptyBorder(0,0,0,0)); // Especially important
    }
    
    public void setBtn() {
        setBtnNoBorder(btnBack);
        setBtnNoBorder(btn_Submit);
        setBtnNoBorder(btn_deleteWord);
        setBtnNoBorder(btn_editword);
    }
    
    public void SuccessAnnouunce(String str) {// Hiện thị thông báo
        Icon icon = new javax.swing.ImageIcon(getClass().getResource("/image/success.png"));
        JOptionPane.showMessageDialog(null, str, "Success", JOptionPane.INFORMATION_MESSAGE, icon);
    }

    public void ErrorAnnounce(String str) {// Hiện thị thông báo
        Icon icon = new javax.swing.ImageIcon(getClass().getResource("/image/error.png"));
        JOptionPane.showMessageDialog(null, str, "Error", JOptionPane.INFORMATION_MESSAGE, icon);
    }

    public void WarningtAnnounce(String str) {// Hiện thị thông báo
        Icon icon = new javax.swing.ImageIcon(getClass().getResource("/image/warning.png"));
        JOptionPane.showMessageDialog(null, str, "Warning", JOptionPane.WARNING_MESSAGE, icon);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtADDenglishword = new javax.swing.JTextField();
        CB_ChooseTopic = new javax.swing.JComboBox<>();
        txtADDvietnamword = new javax.swing.JTextField();
        btn_Submit = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_wordInfo = new javax.swing.JTable();
        btn_editword = new javax.swing.JButton();
        btn_deleteWord = new javax.swing.JButton();
        btnBack = new javax.swing.JToggleButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        txtADDenglishword.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        getContentPane().add(txtADDenglishword);
        txtADDenglishword.setBounds(240, 230, 300, 50);

        CB_ChooseTopic.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        CB_ChooseTopic.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose Topic" }));
        CB_ChooseTopic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CB_ChooseTopicActionPerformed(evt);
            }
        });
        getContentPane().add(CB_ChooseTopic);
        CB_ChooseTopic.setBounds(240, 390, 300, 30);

        txtADDvietnamword.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        getContentPane().add(txtADDvietnamword);
        txtADDvietnamword.setBounds(240, 300, 300, 50);

        btn_Submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_SubmitActionPerformed(evt);
            }
        });
        getContentPane().add(btn_Submit);
        btn_Submit.setBounds(230, 500, 140, 60);

        tbl_wordInfo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbl_wordInfo.setRowHeight(25);
        jScrollPane1.setViewportView(tbl_wordInfo);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(590, 180, 540, 300);

        btn_editword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_editwordActionPerformed(evt);
            }
        });
        getContentPane().add(btn_editword);
        btn_editword.setBounds(672, 502, 140, 60);

        btn_deleteWord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_deleteWordActionPerformed(evt);
            }
        });
        getContentPane().add(btn_deleteWord);
        btn_deleteWord.setBounds(902, 502, 130, 60);

        btnBack.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        btnBack.setForeground(new java.awt.Color(255, 255, 255));
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        getContentPane().add(btnBack);
        btnBack.setBounds(10, 10, 110, 110);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/word_man.png"))); // NOI18N
        jLabel1.setText("jLabel1");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, -20, 1210, 730);

        pack();
    }// </editor-fold>//GEN-END:initComponents
       public boolean checkBlack()// Kiểm tra Jtext nhập từ tiếng anh có trống không?
    {
        if (txtADDvietnamword.getText().trim().equals("") || txtADDenglishword.getText().trim().equals("")) {
            return true; //có trông
        }
        return false; //
    }

    private void showdatacombo() { //Tạo danh sách chủ đề ở comboBox chủ đề
        for (String str : tp.getTopicName()) {
            CB_ChooseTopic.addItem(str);
        }
    }

    private void announcement(String str) { // Thông báo
        JOptionPane.showMessageDialog(null, str);
    }
    private void btn_SubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_SubmitActionPerformed
        Word w = new Word();
        AdminManagerCtl actl = new AdminManagerCtl();
        if (!checkBlack()) {
            if(actl.checkWordExist(txtADDenglishword.getText().toString())!=0){
                 WarningtAnnounce("Word exist...Input word another please!!!");
            }else{
            w.setEn(txtADDenglishword.getText().toString());
            w.setVn(txtADDvietnamword.getText().toString());
            int index = CB_ChooseTopic.getSelectedIndex();
            w.setIdtopic(index);
            a.AddWord(w);
            System.out.println(w.getEn());
            loadDataIntoJTable();
            SuccessAnnouunce("Add Topic Successfully!!!");
            txtADDenglishword.setText("");
            txtADDvietnamword.setText("");
            }
        } else {
            WarningtAnnounce("Please enter fully information.");
        }
    }//GEN-LAST:event_btn_SubmitActionPerformed


    private void btn_editwordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_editwordActionPerformed
        int x = tbl_wordInfo.getSelectedRow();
        String nametp;
        if (x != -1) {
            final panel_editWord pWord = new panel_editWord();
            pWord.JTf_idword.setText(model.getValueAt(x, 0).toString().trim());
            pWord.JTf_en.setText(model.getValueAt(x, 1).toString().trim());
            pWord.JTf_vn.setText(model.getValueAt(x, 2).toString().trim());
            nametp = model.getValueAt(x, 3).toString().trim();
            pWord.cb_choosetopic.setSelectedItem(model.getValueAt(x, 3).toString().trim());
            pWord.bt_Save.addActionListener(new ActionListener() {
                public void actionPerformed(ActionEvent e) {
                    int idtp = a.getIDtopic(pWord.JTf_idtopic.getText());
                    Word w = new Word(Integer.parseInt(pWord.JTf_idword.getText()), pWord.JTf_en.getText(), pWord.JTf_vn.getText(),idtp);
                    a.edit_word(w);
                    SuccessAnnouunce("Edit successfully");
                    loadDataIntoJTable();
                }
            });
        } else {
            WarningtAnnounce("Choose 1 Row Please!!!");
        }
    }//GEN-LAST:event_btn_editwordActionPerformed

    private void btn_deleteWordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_deleteWordActionPerformed
        int x = tbl_wordInfo.getSelectedRow();
        if (x != -1) {
            String iddelete = model.getValueAt(x, 0).toString().trim();
            Word w1 = new Word(Integer.parseInt(iddelete));
            a.delete_word(w1);
            SuccessAnnouunce("Delete successfully");
            loadDataIntoJTable();
        } else {
            WarningtAnnounce("Choose 1 row Please!!!");
        }
    }//GEN-LAST:event_btn_deleteWordActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // Bắt sự kiện nút Back
        this.dispose();
        new AdminManagerView();
    }//GEN-LAST:event_btnBackActionPerformed

    private void CB_ChooseTopicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CB_ChooseTopicActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CB_ChooseTopicActionPerformed
    private String loadNametp(int id){
       String nametp = null;
       nametp =a.getTopicNameSingle(id);
        return nametp;
    }
    
    private void loadDataIntoJTable() {
        model = new DefaultTableModel();
          String tpname;
        //Set Column Title
        Vector column = new Vector();
        column.add("ID Word");
        column.add("English");
        column.add("Vietnamese");
        column.add("Name topic");
        model.setColumnIdentifiers(column);
        ArrayList<Word> list = a.getWordInfo();
        for (int i = 0; i < list.size(); i++) {
            Word w = (Word) list.get(i);
            Vector row = new Vector();
            row.add(w.getIdword());
            row.add(w.getEn());
            row.add(w.getVn());
//            tpname =a.getTopicNameSingle(w.getIdtopic());
            row.add(loadNametp(w.getIdtopic()));
            model.addRow(row);
        }

        tbl_wordInfo.setModel(model);

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(WordManagerView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(WordManagerView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(WordManagerView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(WordManagerView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new WordManagerView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> CB_ChooseTopic;
    private javax.swing.JToggleButton btnBack;
    private javax.swing.JButton btn_Submit;
    private javax.swing.JButton btn_deleteWord;
    private javax.swing.JButton btn_editword;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbl_wordInfo;
    private javax.swing.JTextField txtADDenglishword;
    private javax.swing.JTextField txtADDvietnamword;
    // End of variables declaration//GEN-END:variables
}
